{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'\\n{ \"index\" : { \"_index\": \"retaurants\", \"_type\" : \"Restaurant\", \"_id\" : \"1\" } }\\n{\"restaurantid\": \"lgHmMRBaU-48kGaNz3jYxg\", \"cursine\": \"Chinese\"}\\n{ \"index\" : { \"_index\": \"retaurants\", \"_type\" : \"Restaurant\", \"_id\" : \"2\" } }\\n{\"restaurantid\": \"xq0cX_DgxiJMXwhmEl9kUA\", \"cursine\": \"Chinese\"}\\n'"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import requests\n",
    "import json\n",
    "\n",
    "URL=\"https://api.yelp.com/v3/businesses/search\"\n",
    "#categories=\"chinese\"\n",
    "limit = 50\n",
    "offset = \"0\"\n",
    "headers={\"Authorization\": \"Bearer o7KiYRSz2gnLm142gBwbN5Qt-_yyUbw7CqCRC4jdUNT97K4574b2HuOZgtkiWNCbW4s8LqUcqLXX27s_fU1_QHGGDUOz4TspT-o0ylvla2N19XnlduFvrkvV-jGSXXYx\"}\n",
    "time = 0\n",
    "terms = [\"Chinese\", \"American\", \"Mexican\", \"Japanese\", \"Thai\", \"Korean\", \"Italian\"]\n",
    "\n",
    "i = 1\n",
    "with open(\"./yelp.json\",\"w\") as f:\n",
    "    for term in range(len(terms)):\n",
    "        time = 0\n",
    "        while i <= 1000 * (term+1):            \n",
    "            offset = time * limit\n",
    "            params={\"term\": terms[term], \"location\": \"Manhattan, New York City\", \"limit\":str(limit), \"offset\":str(offset)}\n",
    "            r = requests.get(url = URL, params = params, headers=headers) \n",
    "            data=r.json()\n",
    "            for each in data[\"businesses\"]:\n",
    "                id = each[\"id\"]\n",
    "                d = {\"index\" : { \"_index\": \"restaurants\", \"_type\" : \"Restaurant\", \"_id\" : str(i) }}\n",
    "                json.dump(d,f)      \n",
    "                f.write(\"\\n\")\n",
    "                i += 1\n",
    "                d = {\"restaurantid\": id, \"cursine\": terms[term]}\n",
    "                json.dump(d,f)  \n",
    "                f.write(\"\\n\")\n",
    "            time += 1   \n",
    "    \n",
    "    \n",
    "'''\n",
    "{ \"index\" : { \"_index\": \"retaurants\", \"_type\" : \"Restaurant\", \"_id\" : \"1\" } }\n",
    "{\"restaurantid\": \"lgHmMRBaU-48kGaNz3jYxg\", \"cursine\": \"Chinese\"}\n",
    "{ \"index\" : { \"_index\": \"retaurants\", \"_type\" : \"Restaurant\", \"_id\" : \"2\" } }\n",
    "{\"restaurantid\": \"xq0cX_DgxiJMXwhmEl9kUA\", \"cursine\": \"Chinese\"}\n",
    "'''        \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "dict_keys(['Message'])\n"
     ]
    },
    {
     "ename": "KeyError",
     "evalue": "'hits'",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "\u001b[0;32m<ipython-input-6-d5c838274b08>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0mdata\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjson\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeys\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 8\u001b[0;31m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'hits'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'hits'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'_source'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'restaurantid'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[0;31mKeyError\u001b[0m: 'hits'"
     ]
    }
   ],
   "source": [
    "from random import randrange\n",
    "f = randrange(1000)\n",
    "url = \"https://search-restaurants-ssqahmabav7e6rb57i3ahkwxfe.us-east-2.es.amazonaws.com/restaurants/_search\"\n",
    "params = {\"q\": \"chinese\", \"from\":str(f), \"size\":\"1\"}\n",
    "r = requests.get(url = url, params = params, headers={})\n",
    "data = r.json()\n",
    "print(data['hits']['hits'][0]['_source']['restaurantid'])"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
